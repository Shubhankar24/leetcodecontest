/*
6915. Largest Element in an Array after Merge Operations
You are given a 0-indexed array nums consisting of positive integers.

You can do the following operation on the array any number of times:

Choose an integer i such that 0 <= i < nums.length - 1 and nums[i] <= nums[i + 1]. Replace the element nums[i + 1] with nums[i] + nums[i + 1] and delete the element nums[i] from the array.
Return the value of the largest element that you can possibly obtain in the final array.

Input: nums = [2,3,7,9,3]
Output: 21
Explanation: We can apply the following operations on the array:
- Choose i = 0. The resulting array will be nums = [5,7,9,3].
- Choose i = 1. The resulting array will be nums = [5,16,3].
- Choose i = 0. The resulting array will be nums = [21,3].
The largest element in the final array is 21. It can be shown that we cannot obtain a larger element.  */


// code 

class Solution {
public:
    long long maxArrayValue(vector<int>& nums) {
        int n =nums.size();  
        long end =nums[n-1];
        for(int i=n-2;i>=0;i--){
            long val= nums[i];
            if(val<=end){
                end+=val;
            }
            else{ 
                end= val;
            }
        }
        return end;
    }
};
